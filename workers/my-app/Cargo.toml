[package]
name = "my-app"
version = "0.1.0"
authors = ["Matthew <matt.jurenka@comcast.net>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.2"
worker = "0.0.7"
serde_json = "1.0.67"
serde = { version = "1.0", features = ["derive"] }
wasm-bindgen = "0.2.78"
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
futures = "0.3.17"
chrono = "0.4"
base64 = "0.13.0"
urlencoding = "2.1.0"
reqwest = "0.11.8"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.2", optional = true }

[dependencies.web-sys]
version = "0.3"
features = [
    'Headers',
    'Request',
    'Response',
    'ResponseInit',
    'Request',
    'Window',
    'RequestInit',
    'Url',
    'UrlSearchParams',
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
